<?php

/**
 * This is the model base class for the table "produto".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Produto".
 *
 * Columns in table "produto" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $idprod
 * @property string $nome
 * @property string $descprod
 * @property string $cat
 * @property boolean $ativo
 * @property string $preco
 * @property integer $idusuario
 *
 */
abstract class BaseProduto extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'produto';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Produto|Produtos', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('idprod', 'required'),
			array('idprod, idusuario', 'numerical', 'integerOnly'=>true),
			array('nome, cat', 'length', 'max'=>255),
			array('descprod, ativo, preco', 'safe'),
			array('nome, descprod, cat, ativo, preco, idusuario', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idprod, nome, descprod, cat, ativo, preco, idusuario', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'idprod' => Yii::t('app', 'Idprod'),
			'nome' => Yii::t('app', 'Nome'),
			'descprod' => Yii::t('app', 'Descprod'),
			'cat' => Yii::t('app', 'Cat'),
			'ativo' => Yii::t('app', 'Ativo'),
			'preco' => Yii::t('app', 'Preco'),
			'idusuario' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idprod', $this->idprod);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('descprod', $this->descprod, true);
		$criteria->compare('cat', $this->cat, true);
		$criteria->compare('ativo', $this->ativo);
		$criteria->compare('preco', $this->preco, true);
		$criteria->compare('idusuario', $this->idusuario);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}